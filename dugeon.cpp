#include "dungeon.hpp"

#include <cstdlib>
#include <ctime>

#include "dungeon.hpp"

using namespace std;

Dungeon::Dungeon() {

    maze = {
        {201,205,205,205,205,205,205,205,205,205,205,187, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,201,205,205,205,205,205,205,205,205,205,205,205,205,187},
        {186,176,176,176,176,176,176,176,176,176,176,186, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,186,176,176,176,176,176,176,176,176,176,176,176,176,186},
        {186,176,176,176,176,176,176,176,176,176,176,200,205,205,205,205,205,205,205,205,205,205,205,205,188,176,201,205,205,205,205,205,205,205,205,187,176,186},
        {186,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,186, 32,201,205,205,205,205,205,205,188,176,186},
        {186,176,176,176,176,176,176,176,176,176,176,201,205,205,205,205,205,187,176,201,205,205,205,205,205,205,188, 32,186,176,176,176,176,176,176,176,176,186},
        {186,176,176,176,176,176,176,176,176,176,176,186, 32, 32, 32, 32, 32,186,176,186, 32, 32,201,205,205,205,205,205,188,176,201,205,205,205,205,205,205,188},
        {186,176,176,176,176,176,176,176,176,176,176,186, 32, 32, 32, 32, 32,186,176,186, 32, 32,186,176,176,176,176,176,176,176,200,205,205,205,205,205,205,205},
        {200,205,205,205,205,205,205,205,187,176,201,188, 32, 32, 32, 32, 32,186,176,186, 32, 32,200,205,205,205,205,187,176,176,176,176,176,176,176,176,176, 69},
        { 32, 32, 32, 32, 32, 32, 32, 32,186,176,186, 32, 32,201,205,205,205,188,176,200,205,205,205,205,205,205,205,202,203,205,187,176,201,205,205,205,205,205},
        { 32, 32, 32, 32, 32, 32, 32, 32,186,176,186, 32, 32,186,176,176,176,176,176,176,176,176,176,176,176,176,176,176,186, 32,186,176,200,205,205,205,205,187},
        { 32, 32,201,205,205,205,205,205,188,176,186, 32, 32,186,176,201,205,205,205,205,187,176,201,205,205,205,187,176,186, 32,186,176,176,176,176,176,176,186},
        { 32, 32,186,176,176,176,176,176,176,176,186, 32, 32,186,176,186, 32,201,205,205,188,176,186, 32, 32, 32,186,176,200,205,206,205,205,205,205,187,176,186},
        { 32, 32,186,176,201,205,205,205,187,176,200,205,205,188,176,186, 32,186,176,176,176,176,186, 32, 32, 32,186,176,176,176,186, 32, 32, 32, 32,186,176,186},
        { 32, 32,186,176,186, 32, 32, 32,186,176,176,176,176,176,176,186, 32,186,176,201,205,205,188, 32, 32, 32,200,205,187,176,186, 32, 32, 32, 32,186,176,186},
        { 32, 32,186,176,186, 32, 32, 32,200,205,205,205,205,205,205,188, 32,186,176,186, 32,201,205,205,205,205,187, 32,186,176,200,205,205,205,205,188,176,186},
        { 32, 32,186,176,186, 32,201,205,205,205,205,205,205,205,205,187, 32,186,176,186, 32,186,176,176,176,176,186, 32,186,176,176,176,176,176,176,176,176,186},
        { 32, 32,186,176,186, 32,186,176,176,176,176,176,176,176,176,186, 32,186,176,186, 32,200,205,205,187,176,186, 32,200,205,205,205,205,205,187,176,176,186},
        { 32, 32,186,176,200,205,188,176,176,176,176,176,176,176,176,186, 32,186,176,200,205,205,205,205,188,176,200,205,205,205,205,205,205,205,188,176,176,186},
        { 32, 32,186,176,176,176,176,176,176,176,176,176,176,176,176,186, 32,186,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,186},
        { 32, 32,200,205,205,205,205,205,205,205,205,205,205,205,205,188, 32,200,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,188}
        };

        generateKey(maze);
}

void Dungeon::generateKey(vector<vector<unsigned char>> &d) {
    srand(time(NULL));
    bool keyGen = false;
    while(!keyGen){
        int x = rand() % (38 - 1);
        int y = rand() % (20 - 1);
        if(d[y][x] == 176){
            d[y][x] = 75;
            keyGen = true;
        }
    }

}

vector<vector<unsigned char>> Dungeon::getDungeon() {
    return this->maze;
}

void Dungeon::clearKey(int x, int y) {
    this->maze[y][x] = 176;
}
